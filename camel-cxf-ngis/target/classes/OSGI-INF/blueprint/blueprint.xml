<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xsi:schemaLocation="
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
             http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
  
  <cxf:rsClient id="jcdecauxClient" 
				address="https://api.jcdecaux.com/vls/v1/stations"				
  				serviceClass="com.redhat.camel.cxf.ngis.JCDecaux" 
  				loggingFeatureEnabled="true"/> 
  <bean id="fromJCDecauxToJson" class="com.redhat.camel.cxf.ngis.FromJCDecauxToJson"/>
  	
  <bean id="ngisProcessor" class="com.redhat.camel.ngis.FromJsonToNGISProcessor"/>
  
  <cxf:rsClient id="orionContextBrokerClient" 
				address="http://int.dca.tid.es/NGSI10"				
  				serviceClass="com.redhat.camel.cxf.ngis.OrionContextBroker" 
  				loggingFeatureEnabled="true"/>
  <bean id="fromNGISRequestToOrionContextBroker" class="com.redhat.camel.cxf.ngis.FromNGISRequestToOrionContextBroker"/>					 				
  				  
  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <!-- Call JCDecaux through CXFRS and store in file --> 
    <route id="fromJCDecauxToFile">
      <from uri="timer://foo?period=25000"/>
      <log message="Starting fromJCDecauxToFile route"/>
      <process ref="fromJCDecauxToJson"/>
      <to uri="cxfrs:bean:jcdecauxClient" />
      <log message="Received station ${body}"/>
      <setHeader headerName="Exchange.FILE_NAME">
        <simple>station.json</simple>
      </setHeader>
      <to uri="file:work/station/jcdecauxFile"/>      
      <log message="Stored a copy of the station"/>
    </route>
    
    <!-- Transform JCDecaux json file to NGIS request -->
	<route id="fromJsonToNGIS">
	    <from uri="file:work/station/jcdecauxFileWithoutPosition"/>
	  	<log message="Starting fromJsonToNGIS route"/>	  
	  	<log message="JCDecaux original request: ${body}"/>
	    <unmarshal>
	    	<json library="Jackson" unmarshalTypeName="valencerealtimestation233.ValenceRealTimeStation233" />
	    </unmarshal>
	    <!--  log message="Tras unmarshal ${body}"/ -->
	    <process ref="ngisProcessor"/>
	    <!--  log message="Tras processor ${body}"/ -->
		<marshal>
	    	<json library="Jackson" unmarshalTypeName="ngisrequest.NgisRequest" />
	    </marshal>
	    <!--  log message="Tras marshal ${body}"/ -->
	    <to uri="file:work/station/ngisRequest?fileName=ngisRequest.json"/>
	  </route>

	<!-- Get NGIS json file In, call Orion Context Broker and get NGIS response -->
	<route id="fromNGISrequestToOrionContextBroker">
	  <from uri="file:work/station/ngisRequest" />
	  <log message="Starting fromNGISrequestToOrionContextBroker route"/>	  
	  
	  <log message="Processing NGIS request with body: ${body}"/>
      <process ref="fromNGISRequestToOrionContextBroker"/>
      <to uri="cxfrs:bean:orionContextBrokerClient" />
      <log message="Received Orion Context Broker response ${body}"/>
      <setHeader headerName="Exchange.FILE_NAME">
        <simple>ngisResponse.json</simple>
      </setHeader>	  
	  <to uri="file:work/station/ngisResponse"/> 
	</route>
    
  </camelContext>
</blueprint>
